{"version":3,"file":"36-f1019bce8141bb617655.js","mappings":"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","sources":["webpack://portfolio-marc7806/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://portfolio-marc7806/../src/components/intersection-observer.ts","webpack://portfolio-marc7806/../src/components/lazy-hydrate.tsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","let intersectionObserver: IntersectionObserver\n\nexport type Unobserver = () => void\n\nconst ioEntryMap = new WeakMap<HTMLElement, () => void>()\n/* eslint-disable @typescript-eslint/no-explicit-any  */\nconst connection =\n  (navigator as any).connection ||\n  (navigator as any).mozConnection ||\n  (navigator as any).webkitConnection\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\n// These match the thresholds used in Chrome's native lazy loading\n// @see https://web.dev/browser-level-image-lazy-loading/#distance-from-viewport-thresholds\nconst FAST_CONNECTION_THRESHOLD = `1250px`\nconst SLOW_CONNECTION_THRESHOLD = `2500px`\n\nexport function createIntersectionObserver(\n  callback: () => void\n): (element: HTMLElement) => Unobserver {\n  const connectionType = connection?.effectiveType\n\n  // if we don't support intersectionObserver we don't lazy load (Sorry IE 11).\n  if (!(`IntersectionObserver` in window)) {\n    return function observe(): Unobserver {\n      callback()\n      return function unobserve(): void {}\n    }\n  }\n\n  if (!intersectionObserver) {\n    intersectionObserver = new IntersectionObserver(\n      entries => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            // Get the matching entry's callback and call it\n            ioEntryMap.get(entry.target as HTMLElement)?.()\n            // We only need to call it once\n            ioEntryMap.delete(entry.target as HTMLElement)\n          }\n        })\n      },\n      {\n        rootMargin:\n          connectionType === `4g` && !connection?.saveData\n            ? FAST_CONNECTION_THRESHOLD\n            : SLOW_CONNECTION_THRESHOLD,\n      }\n    )\n  }\n\n  return function observe(element: HTMLElement): Unobserver {\n    // Store a reference to the callback mapped to the element being watched\n    ioEntryMap.set(element, callback)\n    intersectionObserver.observe(element)\n\n    return function unobserve(): void {\n      if (intersectionObserver && element) {\n        ioEntryMap.delete(element)\n        intersectionObserver.unobserve(element)\n      }\n    }\n  }\n}\n","import React from \"react\"\nimport { renderToStaticMarkup } from \"react-dom/server\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage } from \"./main-image\"\nimport {\n  hasNativeLazyLoadSupport,\n  getMainProps,\n  getPlaceholderProps,\n} from \"./hooks\"\nimport { createIntersectionObserver } from \"./intersection-observer\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { GatsbyImageProps } from \"./gatsby-image.browser\"\n\ntype LazyHydrateProps = Omit<GatsbyImageProps, \"as\" | \"style\" | \"className\"> & {\n  isLoading: boolean\n  isLoaded: boolean\n}\n\nasync function applyPolyfill(element: HTMLImageElement): Promise<void> {\n  if (!(`objectFitPolyfill` in window)) {\n    await import(\n      // @ts-ignore typescript can't find the module for some reason ¯\\_(ツ)_/¯\n      /* webpackChunkName: \"gatsby-plugin-image-objectfit-polyfill\" */ `objectFitPolyfill`\n    )\n  }\n  ;(window as any).objectFitPolyfill(element)\n}\n\nfunction toggleLoaded(\n  mainImage: HTMLElement,\n  placeholderImage: HTMLElement\n): void {\n  mainImage.style.opacity = `1`\n\n  if (placeholderImage) {\n    placeholderImage.style.opacity = `0`\n  }\n}\n\nfunction startLoading(\n  element: HTMLElement,\n  cacheKey: string,\n  imageCache: Set<string>,\n  onStartLoad: GatsbyImageProps[\"onStartLoad\"],\n  onLoad: GatsbyImageProps[\"onLoad\"],\n  onError: GatsbyImageProps[\"onError\"]\n): () => void {\n  const mainImage = element.querySelector(\n    `[data-main-image]`\n  ) as HTMLImageElement\n  const placeholderImage = element.querySelector<HTMLElement>(\n    `[data-placeholder-image]`\n  )\n  const isCached = imageCache.has(cacheKey)\n\n  function onImageLoaded(e): void {\n    // eslint-disable-next-line @babel/no-invalid-this\n    this.removeEventListener(`load`, onImageLoaded)\n\n    const target = e.currentTarget\n    const img = new Image()\n    img.src = target.currentSrc\n\n    if (img.decode) {\n      // Decode the image through javascript to support our transition\n      img\n        .decode()\n        .then(() => {\n          // eslint-disable-next-line @babel/no-invalid-this\n          toggleLoaded(this, placeholderImage)\n          onLoad?.({\n            wasCached: isCached,\n          })\n        })\n        .catch(e => {\n          // eslint-disable-next-line @babel/no-invalid-this\n          toggleLoaded(this, placeholderImage)\n          onError?.(e)\n        })\n    } else {\n      // eslint-disable-next-line @babel/no-invalid-this\n      toggleLoaded(this, placeholderImage)\n      onLoad?.({\n        wasCached: isCached,\n      })\n    }\n  }\n\n  mainImage.addEventListener(`load`, onImageLoaded)\n\n  onStartLoad?.({\n    wasCached: isCached,\n  })\n  Array.from(mainImage.parentElement.children).forEach(child => {\n    const src = child.getAttribute(`data-src`)\n    const srcSet = child.getAttribute(`data-srcset`)\n    if (src) {\n      child.removeAttribute(`data-src`)\n      child.setAttribute(`src`, src)\n    }\n    if (srcSet) {\n      child.removeAttribute(`data-srcset`)\n      child.setAttribute(`srcset`, srcSet)\n    }\n  })\n\n  imageCache.add(cacheKey)\n\n  // Load times not always fires - mostly when it's a 304\n  // We check if the image is already completed and if so we trigger onload.\n  if (mainImage.complete) {\n    onImageLoaded.call(mainImage, {\n      currentTarget: mainImage,\n    })\n  }\n\n  return (): void => {\n    if (mainImage) {\n      mainImage.removeEventListener(`load`, onImageLoaded)\n    }\n  }\n}\n\nexport function swapPlaceholderImage(\n  element: HTMLElement,\n  cacheKey: string,\n  imageCache: Set<string>,\n  style: React.CSSProperties,\n  onStartLoad: GatsbyImageProps[\"onStartLoad\"],\n  onLoad: GatsbyImageProps[\"onLoad\"],\n  onError: GatsbyImageProps[\"onError\"]\n): () => void {\n  if (!hasNativeLazyLoadSupport()) {\n    let cleanup\n    const io = createIntersectionObserver(() => {\n      cleanup = startLoading(\n        element,\n        cacheKey,\n        imageCache,\n        onStartLoad,\n        onLoad,\n        onError\n      )\n    })\n    const unobserve = io(element)\n\n    // Polyfill \"object-fit\" if unsupported (mostly IE)\n    if (!(`objectFit` in document.documentElement.style)) {\n      element.dataset.objectFit = style.objectFit ?? `cover`\n      element.dataset.objectPosition = `${style.objectPosition ?? `50% 50%`}`\n      applyPolyfill(element as HTMLImageElement)\n    }\n\n    return (): void => {\n      if (cleanup) {\n        cleanup()\n      }\n\n      unobserve()\n    }\n  }\n\n  return startLoading(\n    element,\n    cacheKey,\n    imageCache,\n    onStartLoad,\n    onLoad,\n    onError\n  )\n}\n\nexport function renderImageToString({\n  image,\n  loading = `lazy`,\n  isLoading,\n  isLoaded,\n  imgClassName,\n  imgStyle = {},\n  objectPosition,\n  backgroundColor,\n  objectFit = `cover`,\n  ...props\n}: LazyHydrateProps): string {\n  const {\n    width,\n    height,\n    layout,\n    images,\n    placeholder,\n    backgroundColor: wrapperBackgroundColor,\n  } = image\n\n  imgStyle = {\n    objectFit,\n    objectPosition,\n    backgroundColor,\n    ...imgStyle,\n  }\n\n  return renderToStaticMarkup(\n    <LayoutWrapper layout={layout} width={width} height={height}>\n      <Placeholder\n        {...getPlaceholderProps(\n          placeholder,\n          isLoaded,\n          layout,\n          width,\n          height,\n          wrapperBackgroundColor,\n          objectFit,\n          objectPosition\n        )}\n      />\n\n      <MainImage\n        {...(props as Omit<\n          MainImageProps,\n          \"images\" | \"fallback\" | \"onLoad\" | \"onError\"\n        >)}\n        width={width}\n        height={height}\n        className={imgClassName}\n        {...getMainProps(isLoading, isLoaded, images, loading, imgStyle)}\n      />\n    </LayoutWrapper>\n  )\n}\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","intersectionObserver","ioEntryMap","WeakMap","connection","navigator","mozConnection","webkitConnection","toggleLoaded","mainImage","placeholderImage","style","opacity","startLoading","element","cacheKey","imageCache","onStartLoad","onLoad","onError","querySelector","isCached","has","onImageLoaded","e","this","removeEventListener","target","currentTarget","img","Image","src","currentSrc","decode","wasCached","catch","addEventListener","Array","from","parentElement","children","forEach","child","getAttribute","srcSet","removeAttribute","setAttribute","add","complete","call","swapPlaceholderImage","hasNativeLazyLoadSupport","cleanup","io","callback","window","IntersectionObserver","entries","entry","isIntersecting","get","delete","rootMargin","effectiveType","saveData","set","observe","unobserve","document","documentElement","dataset","objectFit","objectPosition","fn","async","objectFitPolyfill","self","args","arguments","apply","err","undefined","renderImageToString","image","loading","isLoading","isLoaded","imgClassName","imgStyle","backgroundColor","props","width","height","layout","images","placeholder","wrapperBackgroundColor","renderToStaticMarkup","React","LayoutWrapper","Placeholder","getPlaceholderProps","MainImage","className","getMainProps"],"sourceRoot":""}